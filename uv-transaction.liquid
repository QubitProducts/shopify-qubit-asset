<!-- Qubit Universal Variable -->
<script>
(function () {

  var uv = window.universal_variable = window.universal_variable || {};

  /*
   * Liquid variable setting
   * Take a bunch of the shopify variables and pass them into local JS variables
   * to enable the mapping to Universal Variable.
   */

    // http://docs.shopify.com/themes/liquid-variables/customer
    var user = {
      name: {{ customer.name | json }},
      user_id: {{ customer.id | json }},
      email: {{ customer.email | json }}
    };

  /*
   * Page
   */

    uv.page = {
      type: "Confirmation"
    };


  /*
   * Transaction
   */

    uv.transaction = {
      order_id: {{ order_number | json }},
      currency: "{{ shop.currency }}",
      subtotal: {{ subtotal_price | money_without_currency }},
      subtotal_include_tax: true,
      tax: {{ tax_price | money_without_currency }},
      shipping_cost: {{ shipping_price | money_without_currency }},
      total: {{ total_price | money_without_currency }},
      line_items: []
    };

    // Add voucher discounts if one has been used
    {% for discount in discounts %}
      uv.transaction.voucher = {{ discount.code | json }};
      uv.transaction.voucher_discount = {{ discount.savings | json }};
    {% endfor %}

    // Get the first shipping method
    {% for shipping_method in shipping_methods %}
      uv.transaction.shipping_method = {{ shipping_method.title | json }};
    {% endfor %}

    // Add the line items
    {% for item in line_items %}

      // build out the product object
      var uvProduct = {

        id: {{ item.product.id | json }},

        name: {{ item.product.title | json }},
        description: {{ item.product.description | strip_html | truncate: 100 | json }},
        manufacturer: {{ item.product.vendor | json }},
        category: {{ item.product.type |json }},

        url: "/products/{{ item.product.handle }}",

        // Custom: take the first tag applied, as shopify does not support subcategories
        // TOOD: loop through the tags[] array and add them as key value pairs on a deeper level
        // e.g. subsubcategory, subsubsubcategory
        subcategory: {{ item.product.tags[0] |json }},
        currency: "{{ shop.currency }}",
        unit_price: {{ item.product.price | divided_by: 100 }},
        unit_sale_price: {{ item.product.price_min | divided_by: 100 }},

        // Take the sku_code from the first variant
        sku_code: {{ item.product.variants.first.sku | json }}

        // Shopify doesn't have a voucher on the product level
        // voucher: "MYVOUCHER1",

        // TODO: determine a way of incorporating color and size
        // most likely it'll be handled through the `properties` key
        // color: "Red",
        // size: "M"

      }

      uv.transaction.line_items.push({
        product: uvProduct,
        quantity: {{ item.quantity }},
        subtotal: {{ item.line_price | divided_by: 100 }}
      });
    {% endfor %}


  /*
   * User
   */

    if (user) {
      uv.user = user;
    }

  /*
   * Events
   */

    uv.events = [];


  /*
   * Version
   */

    uv.version = "1.2.0";


}());
</script>
<!-- Qubit Universal Variable end -->

<!-- Opentag container REPLACE XXXX-XXXX with your own id -->
<script src='//d3c3cq33003psk.cloudfront.net/opentag-XXXX-XXXX.js' async defer></script>
<!-- Opentag container end -->